{"version":3,"sources":["reportWebVitals.js","components/sidewrap.jsx","components/navbar.jsx","utils.js","components/Popup.jsx","components/Toggle.jsx","components/carousel.jsx","components/Map.jsx","components/Analysis/Urbanization.jsx","components/Analysis/Poverty.jsx","components/starter.jsx","App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SideBarWrap","props","className","id","React","Component","labelIcons","Pastures","labelsArrayMap","marine_waters","inland_waters","coastal_wetlands","inland_wetlands","transitional_woodland","moors_heathland","natural_grassland","mixed_forest","coniferous_forest","pastures","lpoa","complex_cultivation_patterns","permanent_crops","industrial_commercial","urban_fabric","broad_leaved_forest","agro_forestry","arable_land","beaches_dunes_sands","Popup","useState","showCurrImg","setShowCurrImg","onLabelClickHandler","e","currLabel","Object","entries","key","target","onclose2ClickHandler","href","data","images","length","src","alt","onClick","showPopup","coordinates","toFixed","Date","datetime","toGMTString","keys","distribution","map","keyName","keyIndex","features","elem","index","style","fontSize","visibility","Toggle","class","activeClassName","to","type","name","checked","currentPage","for","Map","mapContainer","useRef","lng","setLng","lat","setLat","zoom","setZoom","popupData","setPopupData","setShowPopup","useEffect","current","mapboxgl","container","center","projection","on","getCenter","getZoom","addControl","NavigationControl","addSource","addLayer","source","paint","base","stops","a","console","log","properties","labels","JSON","parse","geometry","labelsArray","filterGroup","document","getElementById","input","createElement","appendChild","label","setAttribute","textContent","addEventListener","setLayoutProperty","ref","prev","accessToken","Urbanization","geoJson","maxzoom","Poverty","Starter","setFog","range","color","spinGlobe","distancePerSecond","easeTo","duration","easing","n","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.0c7f98c8.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import { SidebarData } from './sidebarData';\r\n\r\nconst SideBarWrap = (props) => {\r\n  return (\r\n    <div className=\"sidebar-main\">\r\n      <div id=\"sidebar\" className=\"sidebar-wrapper\">\r\n        <div className=\"sidebar-content\">\r\n          <div className=\"sidebar__heading\">\r\n            <span>LABELS</span>\r\n            <hr />\r\n          </div>\r\n          <nav id=\"filter-group\" className=\"filter-group\"></nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBarWrap;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  CDBSidebar,\r\n  CDBContainer,\r\n  CDBSidebarContent,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n  CDBSidebarFooter,\r\n} from \"cdbreact\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nimport \"./../styles.scss\";\r\n\r\nclass Navbar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      navbar: \"navbar full\",\r\n      mode: \"main-wrapper\",\r\n      moon: \"fa fa-moon-o\",\r\n      sidebarArrow: \"far fa-arrow-alt-circle-left\",\r\n    };\r\n\r\n    this.sidebarToggleClass = \"sidebar-collapse\";\r\n    this.sidebarHideClass = \"d-none\";\r\n    this.sidebarShowClass = \"sidebar-full\";\r\n  }\r\n\r\n  handleDarkMode = () => {\r\n    if (this.state.mode === \"main-wrapper\") {\r\n      this.setState({ mode: \"main-wrapper active\" });\r\n      this.setState({ moon: \"fa fa-sun-o\" });\r\n    } else {\r\n      this.setState({ mode: \"main-wrapper\" });\r\n      this.setState({ moon: \"fa fa-moon-o\" });\r\n    }\r\n  };\r\n\r\n  handlenavToggle = () => {\r\n    /* if(this.state.navbar===\"navbar\")\r\n      this.setState({navbar:\"navbar active\"})\r\n    else{\r\n      this.setState({navbar:\"navbar\"})\r\n    } */\r\n    let mainWrapElement = document.getElementsByTagName(\"main\")[0];\r\n    let sidebarWrapElement = document.getElementById(\"sidebar\");\r\n    if (sidebarWrapElement.classList.contains(this.sidebarHideClass)) {\r\n      sidebarWrapElement.classList.remove(this.sidebarHideClass);\r\n      mainWrapElement.classList.add(this.sidebarShowClass);\r\n    } else {\r\n      sidebarWrapElement.classList.add(this.sidebarHideClass);\r\n      mainWrapElement.classList.remove(this.sidebarShowClass);\r\n    }\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let mainWrapElement = document.getElementsByTagName(\"main\")[0];\r\n    if (mainWrapElement.classList.contains(this.sidebarToggleClass)) {\r\n      mainWrapElement.classList.remove(this.sidebarToggleClass);\r\n      this.setState({ sidebarArrow: \"far fa-arrow-alt-circle-left\" });\r\n    } else {\r\n      mainWrapElement.classList.add(this.sidebarToggleClass);\r\n      this.setState({ sidebarArrow: \"far fa-arrow-alt-circle-right\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isTaskViewPage = this.props.isTaskViewPage;\r\n\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-default\">\r\n          <a className=\"noselect\" href=\"http://\">\r\n            About\r\n          </a>\r\n          <a className=\"noselect\" href=\"http://\">\r\n            Model\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","const labelIcons = {\r\n  \"Urban fabric\": \"fa-solid fa-building\",\r\n  \"Industrial or commercial units\": \"fa-solid fa-industry\",\r\n  \"Arable land\": \"fa-solid fa-tractor\",\r\n  \"Permanent crops\": \"fa-solid fa-sun-plant-wilt\",\r\n  Pastures: \"fa-solid fa-cow\",\r\n  \"Complex cultivation patterns\": \"fa-solid fa-seedling\",\r\n  \"Land principally occupied by agriculture, with significant areas of natural vegetation\":\r\n    \"fa-solid fa-wheat-awn\",\r\n  \"Agro-forestry areas\": \"fa-solid fa-lungs\",\r\n  \"Broad-leaved forest\": \"fa-brands fa-canadian-maple-leaf\",\r\n  \"Coniferous forest\": \"fa-solid fa-cannabis\",\r\n  \"Mixed forest\": \"fa-solid fa-tree\",\r\n  \"Natural grassland and sparsely vegetated areas\": \"fa-solid fa-leaf\",\r\n  \"Moors, heathland and sclerophyllous vegetation\": \"fa-solid fa-clover\",\r\n  \"Transitional woodland, shrub\": \"fa-brands fa-pagelines\",\r\n  \"Beaches, dunes, sands\": \"fa-solid fa-umbrella-beach\",\r\n  \"Inland wetlands\": \"fa-solid fa-cloud-showers-water\",\r\n  \"Coastal wetlands\": \"fa-solid fa-water\",\r\n  \"Inland waters\": \"fa-solid fa-droplet\",\r\n  \"Marine waters\": \"fa-solid fa-person-swimming\",\r\n};\r\n\r\nconst labelsArrayMap = {\r\n  marine_waters: \"Marine waters\",\r\n  inland_waters: \"Inland waters\",\r\n  coastal_wetlands: \"Coastal wetlands\",\r\n  inland_wetlands: \"Inland wetlands\",\r\n  transitional_woodland: \"Transitional woodland, shrub\",\r\n  moors_heathland: \"Moors, heathland and sclerophyllous vegetation\",\r\n  natural_grassland: \"Natural grassland and sparsely vegetated areas\",\r\n  mixed_forest: \"Mixed forest\",\r\n  coniferous_forest: \"Coniferous forest\",\r\n  pastures: \"Pastures\",\r\n  lpoa: \"Land principally occupied by agriculture\",\r\n  complex_cultivation_patterns: \"Complex cultivation patterns\",\r\n  permanent_crops: \"Permanent crops\",\r\n  industrial_commercial: \"Industrial or commercial units\",\r\n  urban_fabric: \"Urban fabric\",\r\n  broad_leaved_forest: \"Broad-leaved forest\",\r\n  agro_forestry: \"Agro-forestry areas\",\r\n  arable_land: \"Arable land\",\r\n  beaches_dunes_sands: \"Beaches, dunes, sands\",\r\n};\r\n\r\nexport { labelIcons, labelsArrayMap };\r\n// export default labelIcons;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { labelIcons } from \"../utils.js\";\r\n\r\nconst Popup = (props) => {\r\n  const [showCurrImg, setShowCurrImg] = useState(\"\");\r\n  const onClickHandler = () => {\r\n    props.showPopup();\r\n  };\r\n\r\n  const onLabelClickHandler = (e) => {\r\n    let currLabel = \"\";\r\n    for (const [key, value] of Object.entries(labelIcons)) {\r\n      if (value === e.target.className) {\r\n        currLabel = key;\r\n      }\r\n    }\r\n    setShowCurrImg(currLabel);\r\n  };\r\n  const onclose2ClickHandler = (e) => {\r\n    setShowCurrImg(\"\");\r\n  };\r\n  return (\r\n    <div className=\"wrapper__popup\">\r\n      <div className=\"container__popup\">\r\n        <a\r\n          href={props.data.images[props.data.images.length - 1]}\r\n          target=\"_blank\"\r\n        >\r\n          <img\r\n            className=\"popup__image\"\r\n            src={props.data.images[props.data.images.length - 1]}\r\n            alt=\"map image\"\r\n          />\r\n        </a>\r\n        <span onClick={onClickHandler} id=\"close\">\r\n          X\r\n        </span>\r\n\r\n        <p className=\"popup__coordinates\">\r\n          <b>\r\n            {props.data.coordinates[1].toFixed(3)}&#176;N&nbsp;,&nbsp;\r\n            {props.data.coordinates[0].toFixed(3)}&#176;E\r\n          </b>\r\n        </p>\r\n        <div className=\"popup__info\">\r\n          <div className=\"popup__info_datetime\">\r\n            <p>{new Date(props.data.datetime).toGMTString()}</p>\r\n            <hr />\r\n          </div>\r\n          <div className=\"popup__info__distribution\">\r\n            {Object.keys(props.data.distribution).map(function (\r\n              keyName,\r\n              keyIndex\r\n            ) {\r\n              return (\r\n                <div key={keyIndex}>\r\n                  <p key={keyIndex}>\r\n                    {keyName}&nbsp;:&nbsp;\r\n                    <b>{props.data.distribution[keyName].toFixed(2)}</b>\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"container__popup__profile\">\r\n          <div className=\"container__profile__text\">\r\n            {props.data.features.map((elem, index) => (\r\n              <span key={index} className=\"popup__features\">\r\n                <div className=\"label__icons\">\r\n                  <i\r\n                    style={{\r\n                      fontSize: showCurrImg === elem ? \"xx-large\" : \"x-large\",\r\n                    }}\r\n                    className={labelIcons[elem]}\r\n                    onClick={onLabelClickHandler}\r\n                  ></i>\r\n                  <span className=\"label__text\">\r\n                    {props.data.distribution[elem].toFixed(2)} &#37;\r\n                  </span>\r\n                  <span className=\"label__hover__text\">{elem}</span>\r\n                  <div className=\"label__image__wrapper\">\r\n                    <a\r\n                      id={index}\r\n                      href={props.data.images[index]}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <img\r\n                        id={index}\r\n                        style={{\r\n                          visibility:\r\n                            showCurrImg === elem ? \"visible\" : \"hidden\",\r\n                        }}\r\n                        className=\"label__hover__image\"\r\n                        src={props.data.images[index]}\r\n                        alt=\"explainability image\"\r\n                      />\r\n                    </a>\r\n                    {showCurrImg === elem && (\r\n                      <i\r\n                        className=\"label__img__close fa-solid fa-circle-xmark\"\r\n                        onClick={onclose2ClickHandler}\r\n                      ></i>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Toggle = (props) => {\r\n  return (\r\n    <div className=\"toggle\">\r\n      <div class=\"form-check\">\r\n        <NavLink\r\n          className=\"navbar-item\"\r\n          activeClassName=\"is-active\"\r\n          to=\"/map/analysis/urbanization\"\r\n        >\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            name=\"Analysis\"\r\n            id=\"Urbanization\"\r\n            checked={props.currentPage === \"urbanization\" ? true : false}\r\n          />\r\n          <label class=\"form-check-label\" for=\"Urbanization\">\r\n            Urbanization\r\n          </label>\r\n        </NavLink>\r\n      </div>\r\n      <div class=\"form-check\">\r\n        <NavLink\r\n          className=\"navbar-item\"\r\n          activeClassName=\"is-active\"\r\n          to=\"/map/analysis/poverty\"\r\n        >\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            name=\"Analysis\"\r\n            id=\"Poverty\"\r\n            checked={props.currentPage === \"poverty\" ? true : false}\r\n          />\r\n          <label class=\"form-check-label\" for=\"Poverty\">\r\n            Poverty\r\n          </label>\r\n        </NavLink>\r\n      </div>\r\n      <div class=\"form-check\">\r\n        <NavLink className=\"navbar-item\" activeClassName=\"is-active\" to=\"/map\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            name=\"Analysis\"\r\n            id=\"Original\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"Original\">\r\n            Original\r\n          </label>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { Component } from \"react\";\r\nclass Carousel extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"carouselExampleControls\"\r\n        class=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n      >\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img class=\"d-block w-100\" src=\"...\" alt=\"First slide\" />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img class=\"d-block w-100\" src=\"...\" alt=\"Second slide\" />\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img class=\"d-block w-100\" src=\"...\" alt=\"Third slide\" />\r\n          </div>\r\n        </div>\r\n        <a\r\n          class=\"carousel-control-prev\"\r\n          href=\"#carouselExampleControls\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          class=\"carousel-control-next\"\r\n          href=\"#carouselExampleControls\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport SideBarWrap from \"./sidewrap\";\r\nimport Navbar from \"./navbar\";\r\nimport geoJson from \"../data/markers.json\";\r\nimport marine_waters from \"../data/Marine waters.json\";\r\nimport inland_waters from \"../data/Inland waters.json\";\r\nimport coastal_wetlands from \"../data/Coastal wetlands.json\";\r\nimport inland_wetlands from \"../data/Inland wetlands.json\";\r\nimport transitional_woodland from \"../data/Transitional woodland, shrub.json\";\r\nimport moors_heathland from \"../data/Moors, heathland and sclerophyllous vegetation.json\";\r\nimport natural_grassland from \"../data/Natural grassland and sparsely vegetated areas.json\";\r\nimport mixed_forest from \"../data/Mixed forest.json\";\r\nimport coniferous_forest from \"../data/Coniferous forest.json\";\r\nimport pastures from \"../data/Pastures.json\";\r\nimport lpoa from \"../data/Land principally occupied by agriculture, with significant areas of natural vegetation.json\";\r\nimport complex_cultivation_patterns from \"../data/Complex cultivation patterns.json\";\r\nimport permanent_crops from \"../data/Permanent crops.json\";\r\nimport industrial_commercial from \"../data/Industrial or commercial units.json\";\r\nimport urban_fabric from \"../data/Urban fabric.json\";\r\nimport broad_leaved_forest from \"../data/Broad-leaved forest.json\";\r\nimport agro_forestry from \"../data/Agro-forestry areas.json\";\r\nimport arable_land from \"../data/Arable land.json\";\r\nimport beaches_dunes_sands from \"../data/Beaches, dunes, sands.json\";\r\nimport Popup from \"./Popup\";\r\nimport Carousel from \"./carousel\";\r\nimport Analysis from \"./Toggle\";\r\nimport { labelsArrayMap } from \"../utils.js\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoicHJhbmF2MTI5OCIsImEiOiJja3NjMWxjOTMwYzRkMm9xcTUxNXFpYzl5In0._gL-06fXtg1yBszkiiFjEQ\";\r\n\r\nexport default function Map() {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(13.5699);\r\n  const [lat, setLat] = useState(53.1957);\r\n  const [zoom, setZoom] = useState(3.5);\r\n  const [popupData, setPopupData] = useState({\r\n    images: [],\r\n    features: [],\r\n    distribution: {},\r\n    datetime: \"\",\r\n    coordinates: [],\r\n  });\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [layerIDMap, setLayerIDMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      // style: \"mapbox://styles/mapbox/streets-v11\",\r\n      style: \"mapbox://styles/pranav1298/cl5zjtnt9001515o13718d28v\",\r\n      // style: \"mapbox://styles/pranav1298/cl61wt1ud002414nuqjeui04p\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n      projection: \"globe\",\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"move\", () => {\r\n      setLng(map.current.getCenter().lng.toFixed(4));\r\n      setLat(map.current.getCenter().lat.toFixed(4));\r\n      setZoom(map.current.getZoom().toFixed(2));\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"load\", () => {\r\n      map.current.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\r\n\r\n      // Add the vector tileset as a source.\r\n      // map.current.addSource(\"category\", {\r\n      //   type: \"geojson\",\r\n      //   data: geoJson,\r\n      // });\r\n      // map.current.addLayer({\r\n      //   id: \"category-layer\",\r\n      //   type: \"circle\",\r\n      //   source: \"category\",\r\n      //   paint: {\r\n      //     \"circle-radius\": 4,\r\n      // \"circle-stroke-width\": 2,\r\n      //     \"circle-color\": \"red\",\r\n      //     \"circle-stroke-color\": \"white\",\r\n      //   },\r\n      // });\r\n\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"marine_waters\", {\r\n        type: \"geojson\",\r\n        data: marine_waters,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"inland_waters\", {\r\n        type: \"geojson\",\r\n        data: inland_waters,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"coastal_wetlands\", {\r\n        type: \"geojson\",\r\n        data: coastal_wetlands,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"inland_wetlands\", {\r\n        type: \"geojson\",\r\n        data: inland_wetlands,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"transitional_woodland\", {\r\n        type: \"geojson\",\r\n        data: transitional_woodland,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"moors_heathland\", {\r\n        type: \"geojson\",\r\n        data: moors_heathland,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"natural_grassland\", {\r\n        type: \"geojson\",\r\n        data: natural_grassland,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"mixed_forest\", {\r\n        type: \"geojson\",\r\n        data: mixed_forest,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"coniferous_forest\", {\r\n        type: \"geojson\",\r\n        data: coniferous_forest,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"pastures\", {\r\n        type: \"geojson\",\r\n        data: pastures,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"lpoa\", {\r\n        type: \"geojson\",\r\n        data: lpoa,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"complex_cultivation_patterns\", {\r\n        type: \"geojson\",\r\n        data: complex_cultivation_patterns,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"permanent_crops\", {\r\n        type: \"geojson\",\r\n        data: permanent_crops,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"industrial_commercial\", {\r\n        type: \"geojson\",\r\n        data: industrial_commercial,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"urban_fabric\", {\r\n        type: \"geojson\",\r\n        data: urban_fabric,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"broad_leaved_forest\", {\r\n        type: \"geojson\",\r\n        data: broad_leaved_forest,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"agro_forestry\", {\r\n        type: \"geojson\",\r\n        data: agro_forestry,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"arable_land\", {\r\n        type: \"geojson\",\r\n        data: arable_land,\r\n      });\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"beaches_dunes_sands\", {\r\n        type: \"geojson\",\r\n        data: beaches_dunes_sands,\r\n      });\r\n\r\n      //////////////////////////\r\n\r\n      map.current.addLayer({\r\n        id: \"marine_waters-layer\",\r\n        type: \"circle\",\r\n        source: \"marine_waters\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#7400b8\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n\r\n      map.current.addLayer({\r\n        id: \"inland_waters-layer\",\r\n        type: \"circle\",\r\n        source: \"inland_waters\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#4ea8de\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"coastal_wetlands-layer\",\r\n        type: \"circle\",\r\n        source: \"coastal_wetlands\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#003049\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"inland_wetlands-layer\",\r\n        type: \"circle\",\r\n        source: \"inland_wetlands\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#80ffdb\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n\r\n      map.current.addLayer({\r\n        id: \"transitional_woodland-layer\",\r\n        type: \"circle\",\r\n        source: \"transitional_woodland\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#ff9b54\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n\r\n      map.current.addLayer({\r\n        id: \"moors_heathland-layer\",\r\n        type: \"circle\",\r\n        source: \"moors_heathland\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#081c15\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"natural_grassland-layer\",\r\n        type: \"circle\",\r\n        source: \"natural_grassland\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#1b4332\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"mixed_forest-layer\",\r\n        type: \"circle\",\r\n        source: \"mixed_forest\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#70e000\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"coniferous_forest-layer\",\r\n        type: \"circle\",\r\n        source: \"coniferous_forest\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 4.75,\r\n            stops: [\r\n              [12, 4],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#38b000\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"pastures-layer\",\r\n        type: \"circle\",\r\n        source: \"pastures\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#40916c\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"lpoa-layer\",\r\n        type: \"circle\",\r\n        source: \"lpoa\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#d81159\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"complex_cultivation_patterns-layer\",\r\n        type: \"circle\",\r\n        source: \"complex_cultivation_patterns\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#95d5b2\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"permanent_crops-layer\",\r\n        type: \"circle\",\r\n        source: \"permanent_crops\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#a47e1b\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n\r\n      map.current.addLayer({\r\n        id: \"industrial_commercial-layer\",\r\n        type: \"symbol\",\r\n        source: \"industrial_commercial\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#370617\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n\r\n      map.current.addLayer({\r\n        id: \"urban_fabric-layer\",\r\n        type: \"circle\",\r\n        source: \"urban_fabric\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#9d0208\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"broad_leaved_forest-layer\",\r\n        type: \"circle\",\r\n        source: \"broad_leaved_forest\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#007200\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"agro_forestry-layer\",\r\n        type: \"circle\",\r\n        source: \"agro_forestry\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#004b23\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"arable_land-layer\",\r\n        type: \"circle\",\r\n        source: \"arable_land\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 3.75,\r\n            stops: [\r\n              [12, 3],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#ffe169\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n      map.current.addLayer({\r\n        id: \"beaches_dunes_sands-layer\",\r\n        type: \"circle\",\r\n        source: \"beaches_dunes_sands\",\r\n        paint: {\r\n          \"circle-radius\": {\r\n            base: 5.75,\r\n            stops: [\r\n              [12, 5],\r\n              [22, 25],\r\n            ],\r\n          },\r\n          // \"circle-stroke-width\": 2,\r\n          \"circle-color\": \"#dbb42c\",\r\n          // \"circle-stroke-color\": \"white\",\r\n        },\r\n      });\r\n\r\n      //////////////////////////////////////////////////////\r\n\r\n      map.current.on(\"click\", \"marine_waters-layer\", async (e) => {\r\n        console.log(e.features[0].properties.labels);\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"inland_waters-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"coastal_wetlands-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"inland_wetlands-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"transitional_woodland-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"moors_heathland-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"natural_grassland-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"mixed_forest-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"coniferous_forest-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"pastures-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"lpoa-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\r\n        \"click\",\r\n        \"complex_cultivation_patterns-layer\",\r\n        async (e) => {\r\n          setPopupData({\r\n            images: JSON.parse(e.features[0].properties.images),\r\n            features: JSON.parse(e.features[0].properties.labels),\r\n            distribution: JSON.parse(e.features[0].properties.distribution),\r\n            datetime: e.features[0].properties.datetime,\r\n            coordinates: e.features[0].geometry.coordinates,\r\n          });\r\n          setShowPopup(true);\r\n        }\r\n      );\r\n      map.current.on(\"click\", \"permanent_crops-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"industrial_commercial-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"urban_fabric-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"broad_leaved_forest-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"agro_forestry-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"arable_land-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      map.current.on(\"click\", \"beaches_dunes_sands-layer\", async (e) => {\r\n        setPopupData({\r\n          images: JSON.parse(e.features[0].properties.images),\r\n          features: JSON.parse(e.features[0].properties.labels),\r\n          distribution: JSON.parse(e.features[0].properties.distribution),\r\n          datetime: e.features[0].properties.datetime,\r\n          coordinates: e.features[0].geometry.coordinates,\r\n        });\r\n        setShowPopup(true);\r\n      });\r\n      const labelsArray = [\r\n        \"marine_waters\",\r\n        \"inland_waters\",\r\n        \"coastal_wetlands\",\r\n        \"inland_wetlands\",\r\n        \"transitional_woodland\",\r\n        \"moors_heathland\",\r\n        \"natural_grassland\",\r\n        \"mixed_forest\",\r\n        \"coniferous_forest\",\r\n        \"pastures\",\r\n        \"lpoa\",\r\n        \"complex_cultivation_patterns\",\r\n        \"permanent_crops\",\r\n        \"industrial_commercial\",\r\n        \"urban_fabric\",\r\n        \"broad_leaved_forest\",\r\n        \"agro_forestry\",\r\n        \"arable_land\",\r\n        \"beaches_dunes_sands\",\r\n      ];\r\n      for (let labels of labelsArray) {\r\n        const filterGroup = document.getElementById(\"filter-group\");\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"checkbox\";\r\n        input.id = `${labels}`;\r\n        input.checked = true;\r\n        filterGroup.appendChild(input);\r\n\r\n        const label = document.createElement(\"label\");\r\n        label.setAttribute(\"for\", `${labels}`);\r\n        console.log(labelsArray);\r\n        label.textContent = labelsArrayMap[labels];\r\n        filterGroup.appendChild(label);\r\n        // console.log(checkedLayerId, \"CHC\");\r\n        input.addEventListener(\"change\", (e) => {\r\n          map.current.setLayoutProperty(\r\n            `${labels}-layer`,\r\n            \"visibility\",\r\n            e.target.checked ? \"visible\" : \"none\"\r\n          );\r\n        });\r\n      }\r\n    });\r\n  });\r\n  // console.log(popupData)\r\n  const popup = () => {\r\n    setShowPopup((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n      <SideBarWrap />\r\n      {/* <Carousel /> */}\r\n      {/* <div>\r\n        <div class=\"analysis\">\r\n          <Analysis />\r\n        </div>\r\n      </div> */}\r\n      {showPopup && <Popup data={popupData} showPopup={popup} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport SideBarWrap from \"../sidewrap\";\r\nimport geoJson from \"../../data/markers.json\";\r\nimport Analysis from \"../Toggle\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoicHJhbmF2MTI5OCIsImEiOiJja3NjMWxjOTMwYzRkMm9xcTUxNXFpYzl5In0._gL-06fXtg1yBszkiiFjEQ\";\r\n\r\nconst Urbanization = () => {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(82.5699);\r\n  const [lat, setLat] = useState(22.1957);\r\n  const [zoom, setZoom] = useState(3.35);\r\n  const [popupData, setPopupData] = useState({});\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [layerIDMap, setLayerIDMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/pranav1298/cl5zjtnt9001515o13718d28v\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"move\", () => {\r\n      setLng(map.current.getCenter().lng.toFixed(4));\r\n      setLat(map.current.getCenter().lat.toFixed(4));\r\n      setZoom(map.current.getZoom().toFixed(2));\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"load\", () => {\r\n      map.current.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\r\n\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"category\", {\r\n        type: \"geojson\",\r\n        data: geoJson,\r\n      });\r\n\r\n      map.current.addLayer(\r\n        {\r\n          id: \"earthquakes-heat\",\r\n          type: \"heatmap\",\r\n          source: \"category\",\r\n          maxzoom: 9,\r\n          paint: {\r\n            // Increase the heatmap weight based on frequency and property magnitude\r\n            \"heatmap-weight\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"mag\"],\r\n              0,\r\n              0,\r\n              6,\r\n              1,\r\n            ],\r\n            // Increase the heatmap color weight weight by zoom level\r\n            // heatmap-intensity is a multiplier on top of heatmap-weight\r\n            \"heatmap-intensity\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"zoom\"],\r\n              0,\r\n              1,\r\n              9,\r\n              3,\r\n            ],\r\n            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\r\n            // Begin color ramp at 0-stop with a 0-transparancy color\r\n            // to create a blur-like effect.\r\n            \"heatmap-color\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"heatmap-density\"],\r\n              0,\r\n              \"rgba(33,102,172,0)\",\r\n              0.2,\r\n              \"rgb(103,169,207)\",\r\n              0.4,\r\n              \"rgb(209,229,240)\",\r\n              0.6,\r\n              \"rgb(253,219,199)\",\r\n              0.8,\r\n              \"rgb(239,138,98)\",\r\n              1,\r\n              \"rgb(178,24,43)\",\r\n            ],\r\n            // Adjust the heatmap radius by zoom level\r\n            \"heatmap-radius\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"zoom\"],\r\n              0,\r\n              2,\r\n              9,\r\n              20,\r\n            ],\r\n            // Transition from heatmap to circle layer by zoom level\r\n            \"heatmap-opacity\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"zoom\"],\r\n              7,\r\n              1,\r\n              9,\r\n              0,\r\n            ],\r\n          },\r\n        },\r\n        \"waterway-label\"\r\n      );\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"map\">\r\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n      </div>\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n      <SideBarWrap />\r\n      <div class=\"navbar navbar-default navbar-fixed-bottom\">\r\n        <div class=\"analysis\">\r\n          <Analysis currentPage=\"urbanization\" />\r\n        </div>\r\n      </div>\r\n      {/* {showPopup && <Popup data={popupData} showPopup={popup} />} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Urbanization;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport SideBarWrap from \"../sidewrap\";\r\nimport geoJson from \"../../data/markers.json\";\r\nimport Analysis from \"../Toggle\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoicHJhbmF2MTI5OCIsImEiOiJja3NjMWxjOTMwYzRkMm9xcTUxNXFpYzl5In0._gL-06fXtg1yBszkiiFjEQ\";\r\n\r\nconst Poverty = () => {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(82.5699);\r\n  const [lat, setLat] = useState(22.1957);\r\n  const [zoom, setZoom] = useState(3.35);\r\n  const [popupData, setPopupData] = useState({});\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [layerIDMap, setLayerIDMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/satellite-streets-v11\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"move\", () => {\r\n      setLng(map.current.getCenter().lng.toFixed(4));\r\n      setLat(map.current.getCenter().lat.toFixed(4));\r\n      setZoom(map.current.getZoom().toFixed(2));\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n    map.current.on(\"load\", () => {\r\n      map.current.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\r\n\r\n      // Add the vector tileset as a source.\r\n      map.current.addSource(\"category\", {\r\n        type: \"geojson\",\r\n        data: geoJson,\r\n      });\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"map\">\r\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n      </div>\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n      <SideBarWrap />\r\n      <div class=\"navbar navbar-default navbar-fixed-bottom\">\r\n        <div class=\"analysis\">\r\n          <Analysis currentPage=\"poverty\" />\r\n        </div>\r\n      </div>\r\n      {/* {showPopup && <Popup data={popupData} showPopup={popup} />} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Poverty;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoicHJhbmF2MTI5OCIsImEiOiJja3NjMWxjOTMwYzRkMm9xcTUxNXFpYzl5In0._gL-06fXtg1yBszkiiFjEQ\";\r\n\r\nexport default function Starter() {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(79.5699);\r\n  const [lat, setLat] = useState(22.1957);\r\n  const [zoom, setZoom] = useState(1.8);\r\n  const [popupData, setPopupData] = useState({});\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      // style: \"mapbox://styles/mapbox/satellite-streets-v11\",\r\n      style: \"mapbox://styles/pranav1298/cl6hnokg4000214ma2h9md7ji\",\r\n      // style: \"mapbox://styles/pranav1298/cl61wt1ud002414nuqjeui04p\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n      projection: \"globe\",\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!map.current) return; // initialize map only once\r\n    map.current.on(\"load\", () => {\r\n      map.current.setFog({\r\n        range: [-2.8, 6],\r\n        color: \"#8ae3f4\",\r\n        \"horizon-blend\": 0.05,\r\n        \"high-color\": \"#001219\",\r\n        \"space-color\": \"#000000\",\r\n        \"star-intensity\": 0.5,\r\n      });\r\n\r\n      const secondsPerRevolution = 120;\r\n      // Above zoom level 5, do not rotate.\r\n      const maxSpinZoom = 5;\r\n      // Rotate at intermediate speeds between zoom levels 3 and 5.\r\n      const slowSpinZoom = 3;\r\n\r\n      let userInteracting = false;\r\n      let spinEnabled = true;\r\n\r\n      function spinGlobe() {\r\n        const zoom = map.current.getZoom();\r\n        if (spinEnabled && !userInteracting && zoom < maxSpinZoom) {\r\n          let distancePerSecond = 360 / secondsPerRevolution;\r\n          if (zoom > slowSpinZoom) {\r\n            // Slow spinning at higher zooms\r\n            const zoomDif = (maxSpinZoom - zoom) / (maxSpinZoom - slowSpinZoom);\r\n            distancePerSecond *= zoomDif;\r\n          }\r\n          const center = map.current.getCenter();\r\n          center.lng -= distancePerSecond;\r\n          // Smoothly animate the map.current over one second.\r\n          // When this animation is complete, it calls a 'moveend' event.\r\n          map.current.easeTo({ center, duration: 1000, easing: (n) => n });\r\n        }\r\n      }\r\n\r\n      // When animation is complete, start spinning if there is no ongoing interaction\r\n      map.current.on(\"moveend\", () => {\r\n        spinGlobe();\r\n      });\r\n\r\n      spinGlobe();\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* <Navbar /> */}\r\n      <div ref={mapContainer} className=\"map-container\" />\r\n      <div className=\"header\">\r\n        <div className=\"text\">\r\n          {/* <div className=\"head\">Hexagon_XI</div> */}\r\n          <div className=\"discover\">DISCOVER</div>\r\n          <div className=\"lower_text\">Deep dive into Explainability!</div>\r\n          {/* <div className=\"discription\">DISCOVER the objects and features in the image using Explainable AI\r\n          Techniques.</div>           */}\r\n        </div>\r\n        <div className=\"home-center\">\r\n          <a className=\"map-button\" href=\"/map\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            Map View\r\n          </a>\r\n        </div>\r\n        <br />\r\n\r\n        {/* <div className=\"btns gradient-button gradient-button-3\">Upload</div> */}\r\n\r\n        {/* <i className=\"fa fa-globe\"></i> */}\r\n        {/* <a href=\"/map\">\r\n          <img className=\"fa\" src=\"eart.png\" alt=\"\" />\r\n        </a> */}\r\n      </div>\r\n      {/* <img src=\"enviormnent.jpg\" className=\"img-fluid\" alt=\"txt\" /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Map from \"./components/Map\";\r\nimport Urbanization from \"./components/Analysis/Urbanization\";\r\nimport Poverty from \"./components/Analysis/Poverty\";\r\nimport Starter from \"./components/starter\";\r\n\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <main className=\"containers\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Starter} />\r\n        <Route exact path=\"/map\" component={Map} />\r\n        <Route\r\n          exact\r\n          path=\"/map/analysis/urbanization\"\r\n          component={Urbanization}\r\n        />\r\n        <Route exact path=\"/map/analysis/poverty\" component={Poverty} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\r\nimport \"../node_modules/bootstrap-social/bootstrap-social.css\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}